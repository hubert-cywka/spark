name: Build and Push Docker Image

on:
    workflow_call:
        inputs:
            service-directory:
                required: true
                type: string
            service-name:
                required: true
                type: string
            service-image-repository:
                required: true
                type: string
            service-image-tag:
                required: false
                type: string
                default: 'latest'
        secrets:
            DOCKER_HUB_USERNAME:
                required: true
            DOCKER_HUB_TOKEN:
                required: true
            PACKAGES_REGISTRY_PAT:
                required: true

jobs:
    preparation:
        runs-on: ubuntu-latest
        outputs:
            changes-probe: ${{ steps.filter.outputs.changes-probe }}
            is-node-service: ${{ steps.check-node-service.outputs.is_node_service }}
        steps:
            - uses: actions/checkout@v3
            -   name: Check for package.json
                id: check-node-service
                run: |
                    if [ -f "${{ inputs.service-directory }}/package.json" ]; then
                      echo "is_node_service=true" >> $GITHUB_OUTPUT
                    else
                      echo "is_node_service=false" >> $GITHUB_OUTPUT
                    fi
            - name: Filter paths
              uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      changes-probe:
                        - ${{ inputs.service-directory }}/**

    test:
        runs-on: ubuntu-latest
        needs: preparation
        if: ${{ needs.preparation.outputs.changes-probe == 'true' && needs.preparation.outputs.is-node-service == 'true' }}
        steps:
            -   uses: actions/checkout@v3
                with:
                    ref: ${{ github.ref }}
                    fetch-depth: 1
                    clean: true
                    token: ${{ secrets.GITHUB_TOKEN }}

            -   uses: actions/setup-node@v4
                with:
                    node-version: 22
                    cache: 'npm'

            -   name: Install dependencies
                working-directory: ${{ inputs.service-directory }}
                run: npm ci

            -   name: Run unit tests
                working-directory: ${{ inputs.service-directory }}
                run: npm run test:unit

    build:
        runs-on: ubuntu-latest
        needs: preparation
        if: ${{ needs.preparation.outputs.changes-probe == 'true' }}
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: ${{ github.ref }}
                  fetch-depth: 1
                  clean: true
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_TOKEN }}

            - name: Build Docker image
              working-directory: ${{ inputs.service-directory }}
              run: |
                  docker build -t ${{ inputs.service-name }} --build-arg ENV=ci . 

            - name: Tag Docker image
              run: |
                  docker tag ${{ inputs.service-name }} ${{ inputs.service-image-repository }}:${{ inputs.service-image-tag }}

            - name: Push Docker image to Docker Hub
              run: |
                  docker push ${{ inputs.service-image-repository }}:${{ inputs.service-image-tag }}
