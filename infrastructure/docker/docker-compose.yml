version: "3.4"
services:
    tunnel:
        image: ngrok/ngrok:latest
        restart: always
        networks:
            - services_network

    db:
        image: postgres:17.0
        restart: always
        networks:
            - services_network
    
    pooler:
        image: bitnami/pgbouncer:1.24.1
        restart: always
        networks:
            - services_network
        depends_on:
            - db

    controller-1:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network

    controller-2:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network

    controller-3:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network

    broker-1:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network
        depends_on:
            - controller-1
            - controller-2
            - controller-3

    broker-2:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network
        depends_on:
            - controller-1
            - controller-2
            - controller-3
                
    broker-3:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network
        depends_on:
            - controller-1
            - controller-2
            - controller-3

    identity-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - broker-1
            - broker-2
            - broker-3
            - pooler

    journal-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - broker-1
            - broker-2
            - broker-3
            - pooler
    
    alerts-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - broker-1
            - broker-2
            - broker-3            
            - pooler
    
    gdpr-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - broker-1
            - broker-2
            - broker-3            
            - pooler
    
    users-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - broker-1
            - broker-2
            - broker-3
            - pooler
                
    mail-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - broker-1
            - broker-2
            - broker-3
            - pooler

    frontend:
        build:
            context: ../../services/Frontend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network

    gateway:
        build:
            context: ../../services/Gateway
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network

networks:
    services_network:
        external: true

volumes:
    postgres:
        external: false
