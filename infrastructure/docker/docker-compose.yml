version: "3.4"
services:
    tunnel:
        image: ngrok/ngrok:latest
        restart: always
        networks:
            - services_network

    db:
        image: postgres:17.0
        restart: always
        networks:
            - services_network
    
    pooler:
        image: bitnami/pgbouncer:1.24.1
        restart: always
        networks:
            - services_network
        depends_on:
            - db

    kafka-controller-1:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network
        volumes:
            - kafka-kafka-controller-1-data:/kafka/data
        depends_on:
            volume-permissions-job:
                condition: service_completed_successfully
    
    kafka-controller-2:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network
        volumes:
            - kafka-kafka-controller-2-data:/kafka/data
        depends_on:
            volume-permissions-job:
                condition: service_completed_successfully
    
    kafka-controller-3:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network
        volumes:
            - kafka-kafka-controller-3-data:/kafka/data
        depends_on:
            volume-permissions-job:
                condition: service_completed_successfully
                
    kafka-broker-1:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network
        depends_on:
            volume-permissions-job:
                condition: service_completed_successfully
            kafka-controller-1:
                condition: service_started
            kafka-controller-2:
                condition: service_started
            kafka-controller-3:
                condition: service_started
        volumes:
            - kafka-kafka-broker-1-data:/kafka/data
                
    kafka-broker-2:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network
        depends_on:
            volume-permissions-job:
                condition: service_completed_successfully
            kafka-controller-1:
                condition: service_started
            kafka-controller-2:
                condition: service_started
            kafka-controller-3:
                condition: service_started
        volumes:
            - kafka-kafka-broker-2-data:/kafka/data
            
    kafka-broker-3:
        image: apache/kafka:3.9.1
        restart: always
        networks:
            - services_network
        depends_on:
            volume-permissions-job:
                condition: service_completed_successfully
            kafka-controller-1:
                condition: service_started
            kafka-controller-2:
                condition: service_started
            kafka-controller-3:
                condition: service_started
        volumes:
            - kafka-kafka-broker-3-data:/kafka/data
                
    volume-permissions-job:
        image: alpine
        command: >
            sh -c "
              chown -R 1000:1000 /kafka-data/kafka-controller-1 && chmod -R 775 /kafka-data/kafka-controller-1 &&
              chown -R 1000:1000 /kafka-data/kafka-controller-2 && chmod -R 775 /kafka-data/kafka-controller-2 &&
              chown -R 1000:1000 /kafka-data/kafka-controller-3 && chmod -R 775 /kafka-data/kafka-controller-3 &&
              chown -R 1000:1000 /kafka-data/kafka-broker-1 && chmod -R 775 /kafka-data/kafka-broker-1
              chown -R 1000:1000 /kafka-data/kafka-broker-2 && chmod -R 775 /kafka-data/kafka-broker-2
              chown -R 1000:1000 /kafka-data/kafka-broker-3 && chmod -R 775 /kafka-data/kafka-broker-3
            "
        volumes:
            - kafka-kafka-controller-1-data:/kafka-data/kafka-controller-1
            - kafka-kafka-controller-2-data:/kafka-data/kafka-controller-2
            - kafka-kafka-controller-3-data:/kafka-data/kafka-controller-3
            - kafka-kafka-broker-1-data:/kafka-data/kafka-broker-1
            - kafka-kafka-broker-2-data:/kafka-data/kafka-broker-2
            - kafka-kafka-broker-3-data:/kafka-data/kafka-broker-3
                
    identity-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - kafka-broker-1
            - kafka-broker-2
            - kafka-broker-3
            - pooler

    journal-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - kafka-broker-1
            - kafka-broker-2
            - kafka-broker-3
            - pooler
    
    alerts-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - kafka-broker-1
            - kafka-broker-2
            - kafka-broker-3            
            - pooler
    
    gdpr-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - kafka-broker-1
            - kafka-broker-2
            - kafka-broker-3            
            - pooler
    
    users-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - kafka-broker-1
            - kafka-broker-2
            - kafka-broker-3
            - pooler
                
    mail-service:
        build:
            context: ../../services/Backend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network
        depends_on:
            - kafka-broker-1
            - kafka-broker-2
            - kafka-broker-3
            - pooler

    frontend:
        build:
            context: ../../services/Frontend
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network

    gateway:
        build:
            context: ../../services/Gateway
            dockerfile: Dockerfile
        restart: always
        networks:
            - services_network

networks:
    services_network:
        external: true

volumes:
    postgres:
    kafka-kafka-broker-1-data:
    kafka-kafka-broker-2-data:
    kafka-kafka-broker-3-data:
    kafka-kafka-controller-1-data:
    kafka-kafka-controller-2-data:
    kafka-kafka-controller-3-data:
