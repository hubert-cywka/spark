version: "3.4"
services:
    tunnel:
        command:
            - "http"
            - "--url=${NGROK_DOMAIN}"
            - "http://host.docker.internal:${GATEWAY_PORT}"
        environment:
            - NGROK_AUTHTOKEN=${NGROK_AUTH_TOKEN}
        ports:
            - "${NGROK_PORT}:4040"

    db:
        environment:
            - POSTGRES_USER=${DATABASE_USERNAME}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
            - POSTGRES_DB=db
        ports:
            - "5432:5432"
        volumes:
            - postgres:/var/lib/postgresql/data
                
    pooler:
        environment:
            - PGBOUNCER_POOL_MODE=transaction
            - PGBOUNCER_QUERY_WAIT_TIMEOUT=60
            - PGBOUNCER_MAX_CLIENT_CONN=10000
            - PGBOUNCER_DEFAULT_POOL_SIZE=20
            - PGBOUNCER_STATS_USERS=${DATABASE_USERNAME}
            - POSTGRESQL_USERNAME=${DATABASE_USERNAME}
            - POSTGRESQL_PASSWORD=${DATABASE_PASSWORD}
            - PGBOUNCER_DATABASE=*
            - POSTGRESQL_HOST=db
            - POSTGRESQL_PORT=5432
        ports:
            - "${DATABASE_PORT}:6432"

    pubsub:
        ports:
            - "${PUBSUB_PORT}:4222"
            - "8222:8222"
        command: ["-js", "-m", "8222"]

    gateway:
        ports:
            - "${GATEWAY_PORT}:80"
            - "5010:9901"
        env_file:
            - "./.env"
        environment:
            - IDENTITY_SERVICE_ADDRESS=${IDENTITY_SERVICE_HOST}
            - IDENTITY_SERVICE_PORT=80
            - JOURNAL_SERVICE_ADDRESS=${JOURNAL_SERVICE_HOST}
            - JOURNAL_SERVICE_PORT=80
            - ALERTS_SERVICE_ADDRESS=${ALERTS_SERVICE_HOST}
            - ALERTS_SERVICE_PORT=80
            - USERS_SERVICE_ADDRESS=${USERS_SERVICE_HOST}
            - USERS_SERVICE_PORT=80
            - FRONTEND_ADDRESS=${FRONTEND_HOST}
            - FRONTEND_PORT=80

    frontend:
        ports:
            - "${FRONTEND_PORT}:80"
        environment:
            - PORT=80
            - NEXT_PUBLIC_API_URL=${GATEWAY_URL}

    identity-service:
        ports:
            - "${IDENTITY_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - IDENTITY_MODULE_ENABLED=true

    journal-service:
        ports:
            - "${JOURNAL_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - JOURNAL_MODULE_ENABLED=true
                
    alerts-service:
        ports:
            - "${ALERTS_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - ALERTS_MODULE_ENABLED=true

    users-service:
        ports:
            - "${USERS_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - USERS_MODULE_ENABLED=true
                
    gdpr-service:
        ports:
            - "${GDPR_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - GDPR_MODULE_ENABLED=true
                
    mail-service:
        ports:
            - "${MAIL_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - MAIL_MODULE_ENABLED=true
