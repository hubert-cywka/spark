version: "3.4"
services:
    tunnel:
        command:
            - "http"
            - "--url=${NGROK_DOMAIN}"
            - "http://host.docker.internal:${GATEWAY_PORT}"
        environment:
            - NGROK_AUTHTOKEN=${NGROK_AUTH_TOKEN}
        ports:
            - "${NGROK_PORT}:4040"

    db:
        environment:
            - POSTGRES_USER=${DATABASE_USERNAME}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
            - POSTGRES_DB=db
        ports:
            - "5432:5432"
        volumes:
            - postgres:/var/lib/postgresql/data
                
    pooler:
        environment:
            - PGBOUNCER_POOL_MODE=transaction
            - PGBOUNCER_QUERY_WAIT_TIMEOUT=60
            - PGBOUNCER_MAX_CLIENT_CONN=10000
            - PGBOUNCER_DEFAULT_POOL_SIZE=20
            - PGBOUNCER_STATS_USERS=${DATABASE_USERNAME}
            - POSTGRESQL_USERNAME=${DATABASE_USERNAME}
            - POSTGRESQL_PASSWORD=${DATABASE_PASSWORD}
            - PGBOUNCER_DATABASE=*
            - POSTGRESQL_HOST=db
            - POSTGRESQL_PORT=5432
        ports:
            - "${DATABASE_PORT}:6432"
    
    kafka-controller-1:
        environment:
            CLUSTER_ID: ${KAFKA_CLUSTER_ID}
            KAFKA_NUM_PARTITIONS: ${KAFKA_NUM_PARTITIONS}
            KAFKA_NODE_ID: 1
            KAFKA_PROCESS_ROLES: controller
            KAFKA_LISTENERS: CONTROLLER://:${KAFKA_CONTROLLER_INTERNAL_PORT}
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:${KAFKA_CONTROLLER_INTERNAL_PORT},2@kafka-controller-2:${KAFKA_CONTROLLER_INTERNAL_PORT},3@kafka-controller-3:${KAFKA_CONTROLLER_INTERNAL_PORT}
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_LOG_DIRS: /kafka/data

    kafka-controller-2:
        environment:
            CLUSTER_ID: ${KAFKA_CLUSTER_ID}
            KAFKA_NUM_PARTITIONS: ${KAFKA_NUM_PARTITIONS}
            KAFKA_NODE_ID: 2
            KAFKA_PROCESS_ROLES: controller
            KAFKA_LISTENERS: CONTROLLER://:${KAFKA_CONTROLLER_INTERNAL_PORT}
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:${KAFKA_CONTROLLER_INTERNAL_PORT},2@kafka-controller-2:${KAFKA_CONTROLLER_INTERNAL_PORT},3@kafka-controller-3:${KAFKA_CONTROLLER_INTERNAL_PORT}
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_LOG_DIRS: /kafka/data

    kafka-controller-3:
        environment:
            CLUSTER_ID: ${KAFKA_CLUSTER_ID}
            KAFKA_NUM_PARTITIONS: ${KAFKA_NUM_PARTITIONS}
            KAFKA_NODE_ID: 3
            KAFKA_PROCESS_ROLES: controller
            KAFKA_LISTENERS: CONTROLLER://:${KAFKA_CONTROLLER_INTERNAL_PORT}
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:${KAFKA_CONTROLLER_INTERNAL_PORT},2@kafka-controller-2:${KAFKA_CONTROLLER_INTERNAL_PORT},3@kafka-controller-3:${KAFKA_CONTROLLER_INTERNAL_PORT}
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_LOG_DIRS: /kafka/data

    kafka-broker-1:
        ports:
            - 29092:${KAFKA_BROKER_INTERNAL_PORT}
        environment:
            CLUSTER_ID: ${KAFKA_CLUSTER_ID}
            KAFKA_NUM_PARTITIONS: ${KAFKA_NUM_PARTITIONS}
            KAFKA_NODE_ID: 4
            KAFKA_PROCESS_ROLES: broker
            KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:${KAFKA_BROKER_INTERNAL_PORT}'
            KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-1:19092,PLAINTEXT_HOST://localhost:29092'
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_LOG_DIRS: /kafka/data

    kafka-broker-2:
        ports:
            - 39092:${KAFKA_BROKER_INTERNAL_PORT}
        environment:
            CLUSTER_ID: ${KAFKA_CLUSTER_ID}
            KAFKA_NUM_PARTITIONS: ${KAFKA_NUM_PARTITIONS}
            KAFKA_NODE_ID: 5
            KAFKA_PROCESS_ROLES: broker
            KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:${KAFKA_BROKER_INTERNAL_PORT}'
            KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-2:19092,PLAINTEXT_HOST://localhost:39092'
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_LOG_DIRS: /kafka/data

    kafka-broker-3:
        ports:
            - 49092:${KAFKA_BROKER_INTERNAL_PORT}
        environment:
            CLUSTER_ID: ${KAFKA_CLUSTER_ID}
            KAFKA_NUM_PARTITIONS: ${KAFKA_NUM_PARTITIONS}
            KAFKA_NODE_ID: 6
            KAFKA_PROCESS_ROLES: broker
            KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:${KAFKA_BROKER_INTERNAL_PORT}'
            KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-3:19092,PLAINTEXT_HOST://localhost:49092'
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:${KAFKA_CONTROLLER_INTERNAL_PORT},2@kafka-controller-2:${KAFKA_CONTROLLER_INTERNAL_PORT},3@kafka-controller-3:${KAFKA_CONTROLLER_INTERNAL_PORT}
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_LOG_DIRS: /kafka/data

    gateway:
        ports:
            - "${GATEWAY_PORT}:80"
            - "5010:9901"
        env_file:
            - "./.env"
        environment:
            - IDENTITY_SERVICE_ADDRESS=${IDENTITY_SERVICE_HOST}
            - IDENTITY_SERVICE_PORT=80
            - JOURNAL_SERVICE_ADDRESS=${JOURNAL_SERVICE_HOST}
            - JOURNAL_SERVICE_PORT=80
            - ALERTS_SERVICE_ADDRESS=${ALERTS_SERVICE_HOST}
            - ALERTS_SERVICE_PORT=80
            - USERS_SERVICE_ADDRESS=${USERS_SERVICE_HOST}
            - USERS_SERVICE_PORT=80
            - FRONTEND_ADDRESS=${FRONTEND_HOST}
            - FRONTEND_PORT=80

    frontend:
        ports:
            - "${FRONTEND_PORT}:80"
        environment:
            - PORT=80
            - NEXT_PUBLIC_API_URL=${GATEWAY_URL}

    identity-service:
        ports:
            - "${IDENTITY_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - IDENTITY_MODULE_ENABLED=true

    journal-service:
        ports:
            - "${JOURNAL_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - JOURNAL_MODULE_ENABLED=true
                
    alerts-service:
        ports:
            - "${ALERTS_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - ALERTS_MODULE_ENABLED=true

    users-service:
        ports:
            - "${USERS_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - USERS_MODULE_ENABLED=true
                
    gdpr-service:
        ports:
            - "${GDPR_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - GDPR_MODULE_ENABLED=true
                
    mail-service:
        ports:
            - "${MAIL_SERVICE_PORT}:80"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/healthz/liveness" ]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 3
        env_file:
            - ".env"
        environment:
            - PORT=80
            - MAIL_MODULE_ENABLED=true
